# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    broadway.event_store.dbal.connection: 'eventstore'
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    App\Infrastructure\:
        resource: '../src/Infrastructure/*'
        exclude: '../src/Infrastructure/{Command,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Infrastructure\Controller\:
        resource: '../src/Infrastructure/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Infrastructure\Broadway\Projection\:
        resource: '../src/Infrastructure/Broadway/Projection/*'
        tags: ['broadway.domain.event_listener']

    App\Infrastructure\Broadway\Repository\:
        resource: '../src/Infrastructure/Broadway/Repository/*'

    App\Domain\:
        resource: '../src/Domain/**/Handler'
        tags: ['messenger.message_handler']

    MongoDB\Client:
        arguments: ['%env(MONGO_DATABASE_URL)%']

    App\Infrastructure\MongoDb\MongoDbManager:
        arguments:
            $databaseName: '%env(MONGO_DATABASE_NAME)%'

    Broadway\EventStore\EventStore: '@broadway.event_store'
    Broadway\EventHandling\EventBus: '@broadway.event_handling.event_bus'

    App\Infrastructure\Listener\ValidationExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }